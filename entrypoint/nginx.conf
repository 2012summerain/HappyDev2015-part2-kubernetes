user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
      listen 443 ssl;
      server_name registry.default.kube.cluster.local;

      # SSL
      ssl_certificate /etc/nginx/certs/registry.default.kube.cluster.local/domain.crt;
      ssl_certificate_key /etc/nginx/certs/registry.default.kube.cluster.local/domain.key;

      # disable any limits to avoid HTTP 413 for large image uploads
      client_max_body_size 0;

      # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
      chunked_transfer_encoding on;

      location / {

        resolver 192.168.101.10 valid=5s;
        set $backend_upstream "http://$host";

        proxy_pass                          $backend_upstream;
        proxy_set_header  Host              $http_host;   # required for docker client's sake
        proxy_read_timeout                  900;
      }
    }

    server {
      listen 80;

      server_name ~^([a-z0-9\-]+\.)?(?<main_domain>[a-z0-9\-]+\.[a-z0-9\-]+\.kube.cluster.local)$;
      client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

      location / {
        resolver 192.168.101.10 valid=5s;
        set $backend_upstream "http://$main_domain";

        proxy_pass $backend_upstream;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host       $host;   # required for Docker client sake
        proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP
      }

    }

    include /etc/nginx/conf.d/*.conf;

}

